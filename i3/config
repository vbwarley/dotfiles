# Author: vitalwarley
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

#{{{Variables
set $mod Mod4
set $alt Mod1
# TODO: get display names auto
set $mon0 eDP-1
set $mon1 HDMI-1

# Name the workspaces
set $tag1 1 @
set $tag2 2 👁
set $tag3 3 🕮
set $tag4 4 λ
set $tag5 5 💻
set $tag6 6 💻
set $tag7 7 🗓
set $tag8 8 🗎
set $tag9 9 🖉
set $tag10 10 ♪

#}}}

#{{{Font, modifier, workpace settings, etc.
font pango:DejaVu Sans Mono for Powerline 8
floating_modifier $mod

hide_edge_borders   both
title_align center

workspace_auto_back_and_forth yes
workspace_layout tabbed
#}}}

#{{{Colors
# class                     border  backg.  text    indicator   child_border
client.focused              #999999 #2F343F #4db41e #ffffff     #aaaaaa
client.focused_inactive     #2f343f #2f343f #ffffff #2f343f     #6a6a6a
client.unfocused            #FFFFFF #AAAAAA #000000 #333333     #2f343f
client.urgent               #2f343a #900000 #ffffff #900000     #ff0000
client.background           #ffffff 
#}}}

# Binds

#{{{change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#}}}

#{{{move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#}}}

#{{{Splits, fullscren, layouts, toggling, focus
bindsym $mod+Shift+d split h
bindsym $mod+Shift+v split v
bindsym $mod+Shift+space floating toggle
bindsym $mod+f fullscreen toggle
bindsym $mod+e layout toggle split
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+space focus mode_toggle
bindsym $mod+a focus parent
bindsym $mod+c focus child
#}}}

#{{{Workspaces: switching, moving, labeling
bindsym $mod+1 workspace $tag1
bindsym $mod+2 workspace $tag2
bindsym $mod+3 workspace $tag3
bindsym $mod+4 workspace $tag4
bindsym $mod+5 workspace $tag5
bindsym $mod+6 workspace $tag6
bindsym $mod+7 workspace $tag7
bindsym $mod+8 workspace $tag8
bindsym $mod+9 workspace $tag9
bindsym $mod+0 workspace $tag10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $tag1
bindsym $mod+Shift+2 move container to workspace $tag2
bindsym $mod+Shift+3 move container to workspace $tag3
bindsym $mod+Shift+4 move container to workspace $tag4
bindsym $mod+Shift+5 move container to workspace $tag5
bindsym $mod+Shift+6 move container to workspace $tag6
bindsym $mod+Shift+7 move container to workspace $tag7
bindsym $mod+Shift+8 move container to workspace $tag8
bindsym $mod+Shift+9 move container to workspace $tag9
bindsym $mod+Shift+0 move container to workspace $tag10

# workspace 1-5 no monitor e 6-10 no laptop 
workspace "$tag1" output $mon0
workspace "$tag2" output $mon0
workspace "$tag3" output $mon0
workspace "$tag4" output $mon0
workspace "$tag5" output $mon0
workspace "$tag6" output $mon1
workspace "$tag7" output $mon1
workspace "$tag8" output $mon1
workspace "$tag9" output $mon1
workspace "$tag10" output $mon1

#}}}

#{{{i3: reload, restart, logout
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#}}}

#{{{os: shutdown, reboot, suspend, lock
bindsym Control+$mod+l exec sh ~/.config/i3/i3lock.sh
bindsym Control+$mod+h exec shutdown -P now
bindsym Control+$mod+r exec reboot
bindsym Control+$mod+s exec systemctl suspend
#}}}

#{{{terminal, rofi
bindsym $mod+Return exec kitty
bindsym --release $mod+d exec --no-startup-id "rofi -combi-modi window,drun -show combi -modi combi,drun -run-shell-command '{terminal} -e \\" {cmd}; read -n 1 -s\\"'"

# rofi-menus
bindsym $mod+Shift+p exec sh ~/.config/rofi/scripts/powermenu.sh
bindsym F7 exec xrandrmenu
bindsym Control+F7 exec i3layoutmenu
bindsym Control+F10 exec scrot2xclipmenu
bindsym F10 exec scrotmenu &>> /tmp/scrotmenu-log

# TODO: rofi clipboard manager
#}}}

#{{{Close window
bindsym --release $mod+$alt+k exec xkill
bindsym $mod+Shift+q kill
#}}}

#{{{Change window title
bindsym $mod+Shift+t exec ~/dev/dotfiles/i3/scripts/title_format.sh parent
bindsym $mod+t exec ~/dev/dotfiles/i3/scripts/title_format.sh
#}}}

#{{{Multimedia Keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1000
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1000
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#}}}

#{{{Sreen brightness controls
bindsym XF86MonBrightnessUp exec brillo -A 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec brillo -U 5 # decrease screen brightness
#}}}

#{{{Misc: scrot, feh, xrandr
bindsym Print exec scrot -e 'mv $f ~/Images/Screenshots/'
bindsym $mod+Shift+w exec feh --bg-center ~/Images/Wallpapers/metamorphosis2.png
# bindsym $mod+Shift+w exec feh --bg-center ~/Images/VV/silence-breeds-results.jpeg
# TODO: put in a udev rule? improve.
bindsym $mod+Ctrl+x exec xrandr --auto
bindsym $mod+Shift+x exec sh ~/.config/i3/scripts/toggleX.sh
exec sh ~/.config/i3/scripts/toggleX.sh
#}}}

#{{{Startup programs
exec_always --no-startup-id feh --bg-center ~/Images/VV/dont-stop.png
exec --no-startup-id dunst -config ~/.config/i3/config_dunst
# exec --no-startup-id conky --daemonize --pause=5
exec_always --no-startup-id clight
# exec --no-startup-id arbtt-capture
exec --no-startup-id i3-battery-popup -n -t 60
exec_always --no-startup-id ~/.config/polybar/launch.sh
#}}}

#{{{Assign app to workspace
for_window [title="Battery Warning"] sticky enable
for_window [window_type="notification"] floating enable
for_window [class="Spotify"] move to workspace $tag10
for_window [class="^microsoft teams - preview$"] move to workspace $tag1
assign [class="^TelegramDesktop$" instance="^telegram-desktop$"] → $tag1
#}}}

#{{{Switch windows
exec_always --no-startup-id ~/.config/i3/scripts/i3-cycle-focus.py --history 2
bindsym $alt+Tab exec --no-startup-id ~/.config/i3/scripts/i3-cycle-focus.py --switch
#}}}

#{{{Move to urgent window
bindsym $mod+x [urgent=latest] focus
#}}}

# Modes

#{{{Launcher
# Press $mod+o followed by either c, f, g, s, z, Escape or Return to launch one of ... 
# or return to the default mode, respectively.
set $mode_launcher Launch: [b]rave [r]oam [c]hromium [f]irefox [g]oogle-chrome [s]potify [z]athura
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym b exec brave
    bindsym r exec roam-research
    bindsym c exec chromium
    bindsym f exec firefox
    bindsym g exec gchrome
    bindsym s exec spotify
    bindsym z exec zathura

    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#}}}

#{{{Resize
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ccedilla resize grow width 10 px or 10 ppt # usei o xev pra saber o nome usado pro 'ç'

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#}}}

#{{{Gaps [currently I don't use the modes]

for_window [class=".*"] border pixel 1
smart_borders no_gaps
gaps outer 10
gaps inner 10

# Example conf from github
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

# Modes
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
#}}}

#{{{Save/restore workpasces [currently not using]
# i3-resurrect
set $i3_resurrect i3-resurrect

# Save workspace mode.
set $save Press n to save the current workspace
bindsym $mod+n mode "$save"

mode "$save" {
  bindsym p exec "$i3_resurrect save --swallow=class,instance,title"

  # Back to normal: Enter, Escape, or s
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym s mode "default"
  bindsym $mod+p mode "default"
}


# Restore workspace mode.
set $restore Press b to restore the programs only and Mod+b to restore the layout.
bindsym $mod+b mode "$restore"

mode "$restore" {
  bindsym b exec "$i3_resurrect restore --programs-only"
  bindsym $mod+b exec "$i3_resurrect restore --layout-only"

  # Back to normal: Enter, Escape, or n
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym n mode "default"
  bindsym $mod+b mode "default"
}
#}}}

# vim:fdm=marker:fdl=0
